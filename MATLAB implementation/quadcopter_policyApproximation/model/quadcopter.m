function [sys,F] = quadcopter(Ts)

%     - Nonlinear Quadcopter dynamics
%
%     - Bemporad, A., Pascucci, C.A. and Rocchi, C., 2009. Hierarchical 
%       and hybrid model predictive control of quadcopter air vehicles. 
%       IFAC Proceedings Volumes, 42(17), pp.14-19.
%
%     - Written by D. Krishnamoorthy Jan 2021

import casadi.*

m = 1.846; l = 0.505; beta = 0.2;
x = MX.sym('x',12);  % 12 states
u = MX.sym('u',4); % 4 inputs - thrust forces generated by the four motors

xsp = MX.sym('xsp');
ysp = MX.sym('ysp');
zsp = MX.sym('zsp');
d = vertcat(xsp,ysp,zsp); % target coordinates

% Ixx = 0.1722; 
% Iyy = 0.1722; % elements of the diagonal Inertia matrix
% Izz = 0.3424;
F = u(1); %+u[1]+u[2]+u[3] % Total thrust force

dx1 = x(7);         % angular velocity \dot\theta
dx2 = x(8);         % angular velocity \dot\phi
dx3 = x(9);         % angular velocity \dot\psi
dx4 = x(10);        % velocity \dot\x
dx5 = x(11);        % velocity \dot\y
dx6 = x(12);        % velocity \dot\z
dx7 = u(2);         %(u[1]-u[3])*l/Ixx  % torque \tau_\theta
dx8 = u(3);         %(u[2]-u[0])*l/Iyy  % torque \tau_\phi
dx9 = u(4);         %(-u[0]+u[1]-u[2]+u[3])*l/Izz  % torque \tau_\psi
dx10 = (-F*sin(x(1)) - beta*x(10))/m;
dx11 = (F*cos(x(1))*sin(x(2)) - beta*x(11))/m;
dx12 = -9.81 + (F*cos(x(1))*cos(x(2)) - beta*x(12))/m;

dx = vertcat(dx1,dx2,dx3,dx4,dx5,dx6,dx7,dx8,dx9,dx10,dx11,dx12);

L =  10*(x(4) - xsp).^2 + 10*(x(5) - ysp).^2 + 10*(x(6) - zsp).^2 ...
    + sumsqr(x(1:3)) + sumsqr(x(7:12));

% create CVODES integrator
ode = struct('x',x,'p',vertcat(u,d),'ode',dx,'quad',L);
opts = struct('tf',Ts);

% create IDAS integrator
F = integrator('F','cvodes',ode,opts);

f = Function('f',{x,u,d},{dx,L},{'x','u','d'},{'xdot','qj'});

sys = struct('x',x,'u',u,'d',d','dx',dx','L',L,'f',f);
   